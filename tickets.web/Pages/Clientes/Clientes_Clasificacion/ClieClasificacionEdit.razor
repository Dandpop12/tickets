@page "/clasificacionClientes/edit/{Id:int}"
@inject NavigationManager navigationManager
@inject IRepository repository
@inject SweetAlertService sweetAlertService
@attribute [Authorize(Roles = "Admin")]

@if (model is null)
{
    <Loader />
}
else
{
    <MudText Typo="Typo.h5">
        Modificar Clasificación
        <MudChip Color="Color.Warning">@model.Descripcion</MudChip>
    </MudText>

    <MudDivider DividerType="DividerType.Middle" Class="my-4" />

    <ClieClasificacionForm @ref="modelForm" Model="model" OnValidSubmit="EditAsync" ReturnAction="Return" IsLoading="_isLoading" />

}

@code {
    private Clientes_Clasificacion? model;
    private ClieClasificacionForm? modelForm;
    private bool _isLoading;

    [Parameter]
    public int Id { get; set; }

    [CascadingParameter]
    BlazoredModalInstance BlazoredModal { get; set; } = default!;

    protected override async Task OnInitializedAsync()
    {
        var httpResponse = await repository.Get<Clientes_Clasificacion>($"/api/clasificaciones/{Id}");
        if (httpResponse.Error)
        {
            if (httpResponse.HttpResponseMessage.StatusCode == HttpStatusCode.NotFound)
            {
                navigationManager.NavigateTo("/clasificaciones");
                return;
            }

            var errorMessage = await httpResponse.GetErrorMessageAsync();
            await sweetAlertService.FireAsync("Error", errorMessage, SweetAlertIcon.Error);
            return;
        }

        model = httpResponse.Response;
    }

    private async Task EditAsync()
    {
        _isLoading = true;
        var httpResponse = await repository.Put("/api/clasificaciones", model);
        if (httpResponse.Error)
        {
            _isLoading = false;
            var errorMessage = await httpResponse.GetErrorMessageAsync();
            await sweetAlertService.FireAsync("Error", errorMessage, SweetAlertIcon.Error);
            return;
        }

        await BlazoredModal.CloseAsync(ModalResult.Ok());
        _isLoading = false;
        Return();
    }

    private void Return()
    {
        modelForm!.FormPostedSuccessfully = true;
        navigationManager.NavigateTo("/clasificacionClientes");
    }
}

